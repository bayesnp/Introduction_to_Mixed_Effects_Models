
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

Running settings in ~/.Rprofile
.Rprofile: attaching $Rhome: /home/yuelin/.Rhome 
[Previously saved workspace restored]

> 
> pdf("Ahles_Fig2_ab_procSpeed.pdf", paper="USr", width = 11, height=8)
> #setEPS() # subsequent calls to postscript() should save file in EPS
> #postscript("Fig1_ab_procSpeed.eps", paper="special", horizontal = T, width = 11, height = 8)
> ###
> # numbers from SAS output ~/resh/ahles/smokingE4/e4alleleMeans.sas
> #
> # (a): processing speed between patients and controls
> # postscript("Fig1.ps", paper="special", horizontal = F, width = 9, height=6)
> par(mar=c(3.5,4.5,1.1,.1), mfcol = c(1, 2))
> tn <- list(c("Ever Smoked", "Never Smoked"), c("E4 present", "E4 absent"), 
+            c("patients", "control"))
> ylim <- c(-0.40, 1.2)
> # observed means collapsing over 3 assessment time points
> # [present,smoked] [present, no] [absent, smoked] [absent, no]
> M <- array(NA, unlist(lapply(tn, length)), dimnames=tn)
> M[, , "patients"] <- c(0.191, -0.081, 0.116, 0.179)
> M[, , "control"] <- c(.258, 0.306, 0.232, .196)
> # 95% CI from PROC MIXED
> MeL <- array(NA, unlist(lapply(tn, length)), dimnames=tn)
> MeL[, , "patients"] <- c(.04262,-.2142,.007659,.1211)
> MeL[, , "control"] <- c(-.02966,.09261,.1425,.1115)
> 
> MeU <- array(NA, unlist(lapply(tn, length)), dimnames=tn)
> MeU[, , "patients"] <- c(.2760,.06378,.1460,.2949)
> MeU[, , "control"] <- c(0.4652,.6943,.3577,.3923)
> ##
> # set up observed means, model-predicted lower and upper bounds
> ##
> # tcol <- c("grey100", "grey80")
> # tcol <- c("#FFA200", "skyblue", "green", "red")
> # tcol <- c("skyblue6", "skyblue", "goldenrod3", "gold")
> # tcol <- c("skyblue", "deepskyblue4", "goldenrod3", "gold")
> tcol <- c("deepskyblue4", "skyblue", "goldenrod3", "gold")
> tden <- c(-1, -1, -1, -1)
> tang <- c(0, 0, 0, 0)
> M <- matrix(M, nrow = 4)
> MeU <- matrix(MeU, nrow = 4)
> MeL <- matrix(MeL, nrow = 4)
> # plot(c(0, 16), c(-0.42, 1), axes = F, type="n")
> tb <- barplot(M, ylim=ylim-c(0.04, 0), axes=F, axisnames=F, beside=T, col=tcol, density=tden)
> abline(h = 0)
> #
> # [chemo, present, never smoked] bar has to be plotted separately
> # because it is below zero.
> #
> segments(x0 = tb[-2], y0 = M[-2], x1 = tb[-2], y1 = MeU[-2]) # all others
> segments(x0 = tb[2], y0 = M[2], x1 = tb[2], y1 = MeL[2])  # below zero
> 
> segments(x0 = tb[-2], y0 = M[-2], x1 = tb[-2], y1 = MeL[-2]) # all others
> segments(x0 = tb[2], y0 = M[2], x1 = tb[2], y1 = MeU[2])  # below zero
> # plot whiskers
> segments(x0 = tb[-2]-0.03, y0 = MeU[-2], x1 = tb[-2]+0.03, y1 = MeU[-2])
> segments(x0 = tb[2]-0.03, y0 = MeL[2], x1 = tb[2]+0.03, y1 = MeL[2])
> 
> segments(x0 = tb[-2]-0.03, y0 = MeL[-2], x1 = tb[-2]+0.03, y1 = MeL[-2])
> segments(x0 = tb[2]-0.03, y0 = MeU[2], x1 = tb[2]+0.03, y1 = MeU[2])
> 
> # add observed means
> # text(M[-2], x=tb[-2], y=M[-2]-0.02, cex = 0.8 )  # all bars above
> # text(M[2], x=tb[2], y=M[2]+0.02, cex = 0.8 )     # one below bar
> # text(c("(n=8)","(23)","(18)","(11)","(7)","(32)","(18)","(4)","(3)","(22)","(18)"), x=tb[-2], y=M[-2]-0.06, cex = 0.8)
> # text("(n=6)", x=tb[2], y=M[2]+0.06, cex = 0.8)
> # axis(1, at = apply(tb, 2, mean), label = c("", "", ""))
> mtext(c("Patients", "Control"), side = 1, line = .7, at = apply(tb, 2, mean), cex = 1.2)
> mtext(c("(19)", "(13)", "(55)", "(36)", "(4)","(3)","(22)","(18)"), side = 1, at=tb, line = 2.5, cex = 0.9)
> # mark the clusters of bars at the bottom of graph
> segments(tb[1], -.44, tb[4], -.44)     # patient bars
> segments(tb[c(1,4)], -.44, tb[c(1,4)], -.42)
> 
> segments(tb[5], -.44, tb[8], -.44)     # control
> segments(tb[c(5,8)], -.44, tb[c(5,8)], -.42)
> 
> axis(2, at=seq(ylim[1], ylim[2]-.2, by = 0.20), las = 1, cex = .8)
> mtext("Standardized Change in Processing Speed (z-scores)", side = 2, line = 3., cex = 1.2)
> ###
> # p-values
> ###
> tx <- cbind(apply(tb[1:2, ], 2, mean), apply(tb[3:4, ], 2, mean))
> y0 <- ylim[2] - 0.4
> y1 <- y0 + 0.1
> segments(tx[, 1], y1, tx[, 2], y1)  # horizontal top: chemo, no, ctrl
> segments(tx[, 1], y0, tx[, 1], y1)  # left verti: chemo, no, ctrl
> segments(tx[, 2], y0, tx[, 2], y1)  # right verti: chemo, no, ctrl
> text("p = 0.0009", x = mean(tb[2:3]), y = y0+.05, cex = .8)
> text("(a)", x = mean(tb[2:3]), y = y0, cex = .8)
> text("p = 0.4247", x = mean(tb[6:7]), y = y0+.05, cex = .8)
> text("(b)", x = mean(tb[6:7]), y = y0, cex = .8)
> 
> y0 <- c(y1+.01, y1+.01)
> y1 <- c(y1+.05, y1+.05)
> segments(mean(tb[,1]), y1, mean(tb[,2]), y1)  # top horiz:  patn vs. ctrl
> x0 <- c(mean(tb[,1]), mean(tb[,2]))
> x1 <- c(mean(tb[,1]), mean(tb[,2]))
> segments(x0, y0, x1, y1) # two verti line segments
> text("p = 0.0263", x = mean(tb), y = y0, cex = .8)
> text("(c)", x = mean(tb), y = y0-.05, cex = .8)
> 
> ###
> # legend 
> ###
> # tx <- c(tb[9]-.5, tb[9]+.5, tb[9]+.5, tb[9]-.5)
> # ty <- c(-.1, -.1, -.15, -.15)  # legend y-positions
> 
> tx <- c(tb[1]-.5, tb[1]+.5, tb[1]+.5, tb[1]-.5)
> ty <- c(ylim[2]-.01, ylim[2]-.01, ylim[2]-.06, ylim[2]-.06)  # legend y-positions
> polygon(x=tx, y=ty, col=tcol[1], density=tden[1])
> polygon(x=tx, y=ty)  # repeat for black box
> polygon(x=tx, y=ty-.05, col=tcol[2])
> text(c("E4+, Ever Smoked","E4+, Never Smoked"), x=tb[2]-.3, y=c(ty[3]+.025, ty[3]-0.025), adj=0, cex = .8)
> 
> tx <- c(tb[5]-.5, tb[5]+.5, tb[5]+.5, tb[5]-.5)
> polygon(x=tx, y=ty, col=tcol[3], density=tden[3], angle=tang[3])
> polygon(x=tx, y=ty)  # repeat for black box
> polygon(x=tx, y=ty-.05, col=tcol[4], density=tden[4], angle=tang[4])
> polygon(x=tx, y=ty-.05)
> text(c("E4-, Ever Smoked","E4-, Never Smoked"), x=tb[6]-.3, y=c(ty[3]+.025, ty[3]-.025), adj=0, cex = .8)
> 
> mtext("a", side=2, at=ylim[2]-.05, las=1, line=2, cex=1.5)
> ###
> # Chemo and No Chemo groups separated
> ###
> tn <- list(c("Ever Smoked", "Never Smoked"), c("E4 present", "E4 absent"), 
+            c("chemo", "no.chemo", "control"))
> # observed means collapsing over 3 assessment time points
> # [present,smoked] [present, no] [absent, smoked] [absent, no]
> M <- array(NA, unlist(lapply(tn, length)), dimnames=tn)
> M[, , "chemo"] <- c(0.138, -0.245, 0.084, 0.202)
> M[, , "no.chemo"] <- c(0.224, 0.083, 0.138, 0.158)
> M[, , "control"] <- c(0.258, 0.306, 0.232, 0.196)
> # Bayesian model-predicted means from the LSMEANS e4_allele*smoking2*txgrp
> # [present,smoked] [present, no] [absent, smoked] [absent, no]
> Mpred <- array(NA, unlist(lapply(tn, length)), dimnames=tn)
> Mpred[, , "chemo"] <- c(0.156, -0.152, 0.080, 0.216)
> Mpred[, , "no.chemo"] <- c(0.167, 0.023, 0.083, 0.207)
> Mpred[, , "control"] <- c(0.219, 0.400, 0.248, 0.262)
> 
> # 95% CI from PROC GENMOD LSMEANS e4_allele*smoking2*txgrp
> MeL <- array(NA, unlist(lapply(tn, length)), dimnames=tn)
> MeL[, , "chemo"] <- c(0.027, -0.288, 0.005, 0.134)
> MeL[, , "no.chemo"] <- c(0.060, -0.117, 0.020, 0.129)
> MeL[, , "control"] <- c(0.052, 0.180, 0.176, 0.164)
> 
> MeU <- array(NA, unlist(lapply(tn, length)), dimnames=tn)
> MeU[, , "chemo"] <- c(0.287, -0.012, 0.150, 0.304)
> MeU[, , "no.chemo"] <- c(0.264, 0.156, 0.146, 0.287)
> MeU[, , "control"] <- c(0.384, 0.614, 0.321, 0.354)
> ##
> # set up observed means, model-predicted lower and upper bounds
> ##
> tcol <- c("deepskyblue4", "skyblue", "goldenrod3", "gold")
> tden <- c(-1, -1, -1, -1)
> tang <- c(0, 0, 0, 0) 
> M <- matrix(M, nrow = 4)
> Mpred <- matrix(Mpred, nrow = 4)
> MeU <- matrix(MeU, nrow = 4)
> MeL <- matrix(MeL, nrow = 4)
> # plot(c(0, 16), c(-0.42, 1), axes = F, type="n")
> tb <- barplot(M, ylim=ylim-c(.04, 0), axes=F, axisnames=F, beside=T, col=tcol, density=tden, angle = tang)
> abline(h = 0)
> #
> # [chemo, present, never smoked] bar has to be plotted separately
> # because it is below zero.
> #
> segments(x0 = tb[-2], y0 = Mpred[-2], x1 = tb[-2], y1 = MeU[-2]) # all others
> segments(x0 = tb[2], y0 = Mpred[2], x1 = tb[2], y1 = MeL[2])  # below zero
> 
> segments(x0 = tb[-2], y0 = Mpred[-2], x1 = tb[-2], y1 = MeL[-2]) # all others
> segments(x0 = tb[2], y0 = Mpred[2], x1 = tb[2], y1 = MeU[2])  # below zero
> # plot whiskers
> segments(x0 = tb[-2]-0.03, y0 = MeU[-2], x1 = tb[-2]+0.03, y1 = MeU[-2])
> segments(x0 = tb[2]-0.03, y0 = MeL[2], x1 = tb[2]+0.03, y1 = MeL[2])
> 
> segments(x0 = tb[-2]-0.03, y0 = MeL[-2], x1 = tb[-2]+0.03, y1 = MeL[-2])
> segments(x0 = tb[2]-0.03, y0 = MeU[2], x1 = tb[2]+0.03, y1 = MeU[2])
> # add observed means
> # text(M[-2], x=tb[-2], y=M[-2]-0.02, cex = 0.8 )  # all bars above
> # text(M[2], x=tb[2], y=M[2]+0.02, cex = 0.8 )     # one below bar
> # text(c("(n=8)","(23)","(18)","(11)","(7)","(32)","(18)","(4)","(3)","(22)","(18)"), x=tb[-2], y=M[-2]-0.06, cex = 0.8)
> # text("(n=6)", x=tb[2], y=M[2]+0.06, cex = 0.8)
> # axis(1, at = apply(tb, 2, mean), label = c("", "", ""))
> mtext(c("Chemotherapy", "No\nChemotherapy", "Control"), side = 1, line = 1.5, at = apply(tb, 2, mean), cex = 1.2)
> mtext(c("(8)","(6)", "(23)","(18)","(11)","(7)","(32)","(18)","(4)","(3)","(22)","(18)"), side = 1, at=tb, line = 2.5, cex = 0.9)
> # mark the clusters of bars at the bottom of graph
> segments(tb[1], -.44, tb[4], -.44)           # chemo cluster of bars, horiz
> segments(tb[c(1,4)], -.44, tb[c(1,4)], -.42)             # two sides
> 
> segments(tb[5], -.44, tb[8], -.44)     # no.chemo cluster of bars
> segments(tb[c(5,8)], -.44, tb[c(5,8)], -.42)
> 
> segments(tb[9], -.44, tb[12], -.44)     # control cluster of bars
> segments(tb[c(9,12)], -.44, tb[c(9,12)], -.42)
> 
> axis(2, at=seq(-0.40, 1, by = 0.20), las = 1, cex = .8)
> mtext("Standardized Change in Processing Speed", side = 2, line = 3., cex = 1.2)
> ###
> # p-values
> ###
> tx <- cbind(apply(tb[1:2, ], 2, mean), apply(tb[3:4, ], 2, mean))
> y0 <- ylim[2] - 0.4
> y1 <- y0 + 0.1
> segments(tx[, 1], y1, tx[, 2], y1)  # horizontal top: chemo, no, ctrl
> segments(tx[, 1], y0, tx[, 1], y1)  # left verti: chemo, no, ctrl
> segments(tx[, 2], y0, tx[, 2], y1)  # right verti: chemo, no, ctrl
> text("p=0.006", x = mean(tb[2:3]), y = y0+.05, cex = .8)
> text("(a)", x = mean(tb[2:3]), y = y0, cex = .8)
> text("p=0.050", x = mean(tb[6:7]), y = y0+.05, cex = .8)
> text("(b)", x = mean(tb[6:7]), y = y0, cex = .8)
> text("p=0.441", x = mean(tb[10:11]), y = y0+.05, cex = .8)
> text("(c)", x = mean(tb[10:11]), y = y0, cex = .8)
> 
> y0 <- c(y1+.01, y1+.01)
> y1 <- c(y1+.05, y1+.05)
> segments(mean(tb[6:7]), y1, mean(tb[10:11]), y1)  # top horiz:  patn vs. ctrl
> segments(mean(tb[6:7]), y0, mean(tb[6:7]), y1)    # left verti
> segments(mean(tb[10:11]), y0, mean(tb[10:11]), y1)# right verti
> 
> x0 <- c(mean(tb[,1]), mean(tb[,2]))
> x1 <- c(mean(tb[,1]), mean(tb[,2]))
> # segments(x0, y0, x1, y1) # two verti line segments
> text("p=0.084", x = mean(tb[7:10]), y = y0+.01, cex = .8)
> text("(e)", x = mean(tb[7:10]), y = y0-.03, cex = .8)
> 
> y0 <- c(y1+.01, y1+.01)
> y1 <- c(y1+.05, y1+.05)
> segments(mean(tb[2:3]), y1, mean(tb[10:11]), y1)  # top: chemo vs. ctrl
> segments(mean(tb[2:3]), y0-.05, mean(tb[2:3]), y1)    # left verti
> segments(mean(tb[10:11]), y0, mean(tb[10:11]), y1)# right verti
> text("p=0.023 (d)", x = mean(tb[3:10]), y = y1+.03, cex = .8)
> 
> ###
> # legend 
> ###
> # tx <- c(tb[9]-.5, tb[9]+.5, tb[9]+.5, tb[9]-.5)
> # ty <- c(-.1, -.1, -.15, -.15)  # legend y-positions
> 
> # tx <- c(tb[1]-.5, tb[1]+.5, tb[1]+.5, tb[1]-.5)
> # ty <- c(1.1, 1.1, 1.05, 1.05)  # legend y-positions
> # polygon(x=tx, y=ty, col=tcol[1])
> # polygon(x=tx, y=ty-.05, col=tcol[2])
> # text(c("E4+, Ever Smoked","E4+, Never Smoked"), x=tb[2]-.3, y=c(1.075,1.025), adj=0, cex = .8)
> 
> # tx <- c(tb[6]-.5, tb[6]+.5, tb[6]+.5, tb[6]-.5)
> # polygon(x=tx, y=ty, col=tcol[3], density=tden[3], angle=tang[3])
> # polygon(x=tx, y=ty)  # repeat for black box
> # polygon(x=tx, y=ty-.05, col=tcol[4], density=tden[4], angle=tang[4])
> # polygon(x=tx, y=ty-.05)
> # text(c("E4-, Ever Smoked","E4-, Never Smoked"), x=tb[7]-.3, y=c(1.075,1.025), adj=0, cex = .8)
> # text("(A) Processing Speed", x = tb[1]-.5, y = ylim[2]-.06, adj = 0, cex = 1.5)
> mtext("b", side=2, at=ylim[2]-.05, las=1, line=2, cex=1.5)
> 
> # rm(tcol, M, tang, tden, MeU, MeL, tx, ty, y0, y1, tb)
> 
> proc.time()
   user  system elapsed 
  0.769   0.686   0.362 
